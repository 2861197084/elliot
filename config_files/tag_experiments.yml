experiment:
  dataset: movielens_20m
  data_config:
    strategy: dataset
    dataset_path: ../data/movielens_20m/dataset.tsv
    side_information:
      - dataloader: ItemAttributes
        attribute_file: ../data/movielens_20m/item_features.tsv
  splitting:
    save_on_disk: True
    save_folder: ../data/movielens_20m/splitting/
    test_splitting:
      strategy: temporal_hold_out
      test_ratio: 0.2
  top_k: 50
  evaluation:
    cutoffs: [10, 20]
    simple_metrics: [nDCG, Recall, MAP, MRR]
  gpu: 0
  external_models_path: ../external/models/__init__.py
  models:
    VSM:
      meta:
        save_recs: True
        hyper_opt_alg: grid
      similarity: [cosine, correlation]
      user_profile: [tfidf, binary]
      item_profile: [tfidf, binary]

    AttributeItemKNN:
      meta:
        save_recs: True
        hyper_opt_alg: grid
      neighbors: [15, 30, 60, 100]
      similarity: [cosine, correlation]

    AttributeUserKNN:
      meta:
        save_recs: True
        hyper_opt_alg: grid
      neighbors: [15, 30, 60, 100]
      similarity: [cosine, correlation]
      profile: [binary, tfidf]

    # DeepFM:
    #   meta:
    #     save_recs: True
    #     hyper_opt_alg: grid
    #   epochs: 20
    #   batch_size: 32
    #   factors: [32]
    #   lr: [0.0005]
    #   reg: [0.0001]
    #   hidden_neurons: ["(64,32)"]
    #   hidden_activations: ["('relu','relu')"]
    #   loader: ItemAttributes

    RP3beta:
      meta:
        save_recs: True
        hyper_opt_alg: grid
      neighborhood: [50, 100, 200]
      alpha: [0.8, 1.0]
      beta: [0.3, 0.6]
